
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "Warrior Simulator | AutoFarm🚜", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

--[[
Name = <string> - The name of the UI.
HidePremium = <bool> - Whether or not the user details shows Premium status or not.
SaveConfig = <bool> - Toggles the config saving in the UI.
ConfigFolder = <string> - The name of the folder where the configs are saved.
IntroEnabled = <bool> - Whether or not to show the intro animation.
IntroText = <string> - Text to show in the intro animation.
IntroIcon = <string> - URL to the image you want to use in the intro animation.
Icon = <string> - URL to the image you want displayed on the window.
CloseCallback = <function> - Function to execute when the window is closed.
]]

local Tab = Window:MakeTab({
	Name = "World-1",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddButton({
	Name = "Level 1 Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("1")
    if train then
        local hitBox1 = train:FindFirstChild("6001") and train:FindFirstChild("6001").HitBox
        local hitBox2 = train:FindFirstChild("6001") and train:FindFirstChild("6001").HitBox
        local hitBox3 = train:FindFirstChild("6001") and train:FindFirstChild("6001").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Level 8 Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("1")
    if train then
        local hitBox1 = train:FindFirstChild("6002") and train:FindFirstChild("6002").HitBox
        local hitBox2 = train:FindFirstChild("6002") and train:FindFirstChild("6002").HitBox
        local hitBox3 = train:FindFirstChild("6002") and train:FindFirstChild("6002").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "VIP Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("1")
    if train then
        local hitBox1 = train:FindFirstChild("6004") and train:FindFirstChild("6004").HitBox
        local hitBox2 = train:FindFirstChild("6004") and train:FindFirstChild("6004").HitBox
        local hitBox3 = train:FindFirstChild("6004") and train:FindFirstChild("6004").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

local Tab = Window:MakeTab({
	Name = "World-2",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddButton({
	Name = "Level 1 Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("2")
    if train then
        local hitBox1 = train:FindFirstChild("6005") and train:FindFirstChild("6005").HitBox
        local hitBox2 = train:FindFirstChild("6005") and train:FindFirstChild("6005").HitBox
        local hitBox3 = train:FindFirstChild("6005") and train:FindFirstChild("6005").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Level 20 Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("2")
    if train then
        local hitBox1 = train:FindFirstChild("6006") and train:FindFirstChild("6006").HitBox
        local hitBox2 = train:FindFirstChild("6006") and train:FindFirstChild("6006").HitBox
        local hitBox3 = train:FindFirstChild("6006") and train:FindFirstChild("6006").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Level 30 Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("2")
    if train then
        local hitBox1 = train:FindFirstChild("6007") and train:FindFirstChild("6007").HitBox
        local hitBox2 = train:FindFirstChild("6007") and train:FindFirstChild("6007").HitBox
        local hitBox3 = train:FindFirstChild("6007") and train:FindFirstChild("6007").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "VIP Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("2")
    if train then
        local hitBox1 = train:FindFirstChild("6008") and train:FindFirstChild("6008").HitBox
        local hitBox2 = train:FindFirstChild("6008") and train:FindFirstChild("6008").HitBox
        local hitBox3 = train:FindFirstChild("6008") and train:FindFirstChild("6008").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

local Tab = Window:MakeTab({
	Name = "World-3",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddButton({
	Name = "Level 1 Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("3")
    if train then
        local hitBox1 = train:FindFirstChild("6009") and train:FindFirstChild("6009").HitBox
        local hitBox2 = train:FindFirstChild("6009") and train:FindFirstChild("6009").HitBox
        local hitBox3 = train:FindFirstChild("6009") and train:FindFirstChild("6009").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Level 40 Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("3")
    if train then
        local hitBox1 = train:FindFirstChild("6010") and train:FindFirstChild("6010").HitBox
        local hitBox2 = train:FindFirstChild("6010") and train:FindFirstChild("6010").HitBox
        local hitBox3 = train:FindFirstChild("6010") and train:FindFirstChild("6010").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Level 50 Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("3")
    if train then
        local hitBox1 = train:FindFirstChild("6011") and train:FindFirstChild("6011").HitBox
        local hitBox2 = train:FindFirstChild("6011") and train:FindFirstChild("6011").HitBox
        local hitBox3 = train:FindFirstChild("6011") and train:FindFirstChild("6011").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "VIP Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("3")
    if train then
        local hitBox1 = train:FindFirstChild("6012") and train:FindFirstChild("6012").HitBox
        local hitBox2 = train:FindFirstChild("6012") and train:FindFirstChild("6012").HitBox
        local hitBox3 = train:FindFirstChild("6012") and train:FindFirstChild("6012").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

local Tab = Window:MakeTab({
	Name = "World-4",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddButton({
	Name = "Level 1 Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("4")
    if train then
        local hitBox1 = train:FindFirstChild("6013") and train:FindFirstChild("6013").HitBox
        local hitBox2 = train:FindFirstChild("6013") and train:FindFirstChild("6013").HitBox
        local hitBox3 = train:FindFirstChild("6013") and train:FindFirstChild("6013").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Level 65 Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("4")
    if train then
        local hitBox1 = train:FindFirstChild("6014") and train:FindFirstChild("6014").HitBox
        local hitBox2 = train:FindFirstChild("6014") and train:FindFirstChild("6014").HitBox
        local hitBox3 = train:FindFirstChild("6014") and train:FindFirstChild("6014").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Level 75 Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("4")
    if train then
        local hitBox1 = train:FindFirstChild("6015") and train:FindFirstChild("6015").HitBox
        local hitBox2 = train:FindFirstChild("6015") and train:FindFirstChild("6015").HitBox
        local hitBox3 = train:FindFirstChild("6015") and train:FindFirstChild("6015").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "VIP Train AutoFarm (Required VIP Gamepass)",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("4")
    if train then
        local hitBox1 = train:FindFirstChild("6016") and train:FindFirstChild("6016").HitBox
        local hitBox2 = train:FindFirstChild("6016") and train:FindFirstChild("6016").HitBox
        local hitBox3 = train:FindFirstChild("6016") and train:FindFirstChild("6016").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

local Tab = Window:MakeTab({
	Name = "World 5",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddButton({
	Name = "Level 1 Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("5")
    if train then
        local hitBox1 = train:FindFirstChild("6017") and train:FindFirstChild("6017").HitBox
        local hitBox2 = train:FindFirstChild("6017") and train:FindFirstChild("6017").HitBox
        local hitBox3 = train:FindFirstChild("6017") and train:FindFirstChild("6017").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Level 105 Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("5")
    if train then
        local hitBox1 = train:FindFirstChild("6018") and train:FindFirstChild("6018").HitBox
        local hitBox2 = train:FindFirstChild("6018") and train:FindFirstChild("6018").HitBox
        local hitBox3 = train:FindFirstChild("6018") and train:FindFirstChild("6018").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Level 120 Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("5")
    if train then
        local hitBox1 = train:FindFirstChild("6019") and train:FindFirstChild("6019").HitBox
        local hitBox2 = train:FindFirstChild("6019") and train:FindFirstChild("6019").HitBox
        local hitBox3 = train:FindFirstChild("6019") and train:FindFirstChild("6019").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "VIP Train AutoFarm (Required VIP Gamepass)",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("5")
    if train then
        local hitBox1 = train:FindFirstChild("6020") and train:FindFirstChild("6020").HitBox
        local hitBox2 = train:FindFirstChild("6020") and train:FindFirstChild("6020").HitBox
        local hitBox3 = train:FindFirstChild("6020") and train:FindFirstChild("6020").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

local Tab = Window:MakeTab({
	Name = "World-6",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddButton({
	Name = "Level 1 Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("6")
    if train then
        local hitBox1 = train:FindFirstChild("6021") and train:FindFirstChild("6021").HitBox
        local hitBox2 = train:FindFirstChild("6021") and train:FindFirstChild("6021").HitBox
        local hitBox3 = train:FindFirstChild("6021") and train:FindFirstChild("6021").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Level 145 Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("6")
    if train then
        local hitBox1 = train:FindFirstChild("6022") and train:FindFirstChild("6022").HitBox
        local hitBox2 = train:FindFirstChild("6022") and train:FindFirstChild("6022").HitBox
        local hitBox3 = train:FindFirstChild("6022") and train:FindFirstChild("6022").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Level 160 Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("6")
    if train then
        local hitBox1 = train:FindFirstChild("6023") and train:FindFirstChild("6023").HitBox
        local hitBox2 = train:FindFirstChild("6023") and train:FindFirstChild("6023").HitBox
        local hitBox3 = train:FindFirstChild("6023") and train:FindFirstChild("6023").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "VIP Train AutoFarm (Required VIP Gamepass)",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("6")
    if train then
        local hitBox1 = train:FindFirstChild("6024") and train:FindFirstChild("6024").HitBox
        local hitBox2 = train:FindFirstChild("6024") and train:FindFirstChild("6024").HitBox
        local hitBox3 = train:FindFirstChild("6024") and train:FindFirstChild("6024").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

local Tab = Window:MakeTab({
	Name = "World-7",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddButton({
	Name = "Level 1st Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("7")
    if train then
        local hitBox1 = train:FindFirstChild("6025") and train:FindFirstChild("6025").HitBox
        local hitBox2 = train:FindFirstChild("6025") and train:FindFirstChild("6025").HitBox
        local hitBox3 = train:FindFirstChild("6025") and train:FindFirstChild("6025").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Level 2nd Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("1")
    if train then
        local hitBox1 = train:FindFirstChild("6026") and train:FindFirstChild("6026").HitBox
        local hitBox2 = train:FindFirstChild("6026") and train:FindFirstChild("6026").HitBox
        local hitBox3 = train:FindFirstChild("6026") and train:FindFirstChild("6026").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Level 3rd Train AutoFarm",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("7")
    if train then
        local hitBox1 = train:FindFirstChild("6027") and train:FindFirstChild("6027").HitBox
        local hitBox2 = train:FindFirstChild("6027") and train:FindFirstChild("6027").HitBox
        local hitBox3 = train:FindFirstChild("6027") and train:FindFirstChild("6027").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "VIP Train AutoFarm (Required VIP Gamepass)",
	Callback = function()
      		local shouldRun = true -- control
-- Function to stop the loop
local function stopLoop()
    shouldRun = false
end

-- Example: Call stopLoop after 2 seconds (you can change this as needed)
delay(9999999, stopLoop)

while shouldRun do
    wait(0)

    -- Check if the Train and HitBoxes exist to avoid errors
    local train = workspace.Train:FindFirstChild("7")
    if train then
        local hitBox1 = train:FindFirstChild("6028") and train:FindFirstChild("6028").HitBox
        local hitBox2 = train:FindFirstChild("6028") and train:FindFirstChild("6028").HitBox
        local hitBox3 = train:FindFirstChild("6028") and train:FindFirstChild("6028").HitBox

        -- Ensure all hitboxes are found before proceeding
        if hitBox1 and hitBox2 and hitBox3 then
            local args = {
                [1] = {
                    hitBox1,
                    hitBox2,
                    hitBox3
                }
            }

            game:GetService("ReplicatedStorage").Remotes.Skill.SkillDamage:FireServer(unpack(args))
        end
    end
end

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

local Tab = Window:MakeTab({
	Name = "Misc📜",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddButton({
	Name = "Infinite Gems",
	Callback = function()
      		loadstring(game:HttpGet("https://raw.githubusercontent.com/BaconScriptCloud/Script/main/Warrior%20Simulator"))()
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Buy MegaHuge Win",
	Callback = function()
      		local args = {
    [1] = "MegaHuge"
}

game:GetService("ReplicatedStorage").Remotes.Common.Market.MarketBuyWin:FireServer(unpack(args))

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Purchase Best Sword",
	Callback = function()
      		local args = {
    [1] = 4
}

game:GetService("ReplicatedStorage").Remotes.Common.Reward.EventPurchase:FireServer(unpack(args))

  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Anti Afk",
	Callback = function()
    
loadstring(game:HttpGet("https://raw.githubusercontent.com/evxncodes/mainroblox/main/anti-afk", true))()
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

local Tab = Window:MakeTab({
	Name = "Tips🔥",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddLabel("#1 Use Weakest Sword")
Tab:AddLabel("#2 Use Private Server")
Tab:AddLabel("#3 Enable Anti Afk")

local Tab = Window:MakeTab({
	Name = "Info❗",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddParagraph("Youtube🎥","BaconScriptCloud")

Tab:AddButton({
	Name = "Click To Copy YouTube Link",
	Callback = function()
      		setclipboard("https://youtube.com/@baconscriptcloud?si=acy4VcWqYjjUdaIj")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddParagraph("📢Discord","https://discord.com/invite/zK2DSwU7")

Tab:AddButton({
	Name = "Click To Copy Discord Link",
	Callback = function()
      		setclipboard("https://discord.com/invite/zK2DSwU7")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddParagraph("🌟Creator","Paragraph Content")